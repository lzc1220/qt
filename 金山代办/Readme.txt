一、程序使用要注意的东西
1.因为想要尽可能还原“金山待办”的界面和功能，我用了三个自己的按钮类，即文件中的kmypushbutton.h,kprintbutton.h和ktodoitem.h，我重写了kprintbutton.h和ktodoitem.h的绘画事件，因为绘画事件的频繁刷新，导致界面会有些卡顿。我做过一些优化，如改了界面生成的逻辑，不让其频繁创建和删除按钮，而是维护三个list来存放他们。优化效果理想，已经不会像一开始延迟好几秒让人崩溃了，但是还是会有些卡顿，如果在检查的时候有延迟，请耐心等待片刻就好。
2.我的资源文件中存放了各种图标，他们的加载是在我重写的画家事件中，如果无法加载会有提示信息。
3.对于部分待办中的信息，在右边已经有提示，比如提醒时间等，我就没有把他们画到我的待办按钮上，通过右边的提示信息进行查看和修改即可。

二、文件说明
       文件中的头文件有ktodo.h、kmypushbutton.h、kprintbutton、ktodoitem，后面三个都是我继承的按钮，我给他们加了不同的显示方式，主要是为了界面更加美观，ktodo则是我的程序的主文件，包括了整体界面的构造和各种功能的实现。

三、数据库操作
       数据库的实现并不复杂，用数据库来对数据进行增删改查，用于保存信息和辅助显示界面，其中有两个table，一个是todogroup，一个是todoitem，分别保存分组的数据和具体待办事项的数据。
       todogroup包括两个属性，即编号id和组名name。
       todoitem则包括12个属性，分别是编号id，事件名activity，分组名todogroupname，是否重复isrepeat，状态（是否完成）status，优先级priority创建时间createtime，到期时间duetime，提醒时间remtime，描述description，位置location，备注note。
       需要注意的是，我设置了分组名字和待办事件名字不能重复，对于分组，会将重复的分组显示出来，但是里面的数据相同，对于事件，则会给出提示信息"不允许创建两个相同的事件"。

四、界面实现逻辑
       主要就是两个pushbottonGroup分别保存左边分组的数据和中间待办的数据，对这两个分组的点击信号连接槽函数并实现相应功能。对于待办事件，因为要实现折叠逻辑，我用了三个list分别维护总的事件，目前显示的事件和目前隐藏的事件，用他们来处理显示的信息。

五、界面显示逻辑
       核心部件是两个Scroll Area，往里面添加布局，实现分组和待办的显示，当然还有其他的具体分组和实现部件以及一些实现功能的部件。我没有用List View，Table View，Tree View等，一开始我是用的这些，确实很方便，很快就实现了各种功能，但是界面实在丑陋，具体的样式我改的一直不理想，所以后面干脆重做了一个，自己绘制需要的组件，自己实现tree view等的功能，当然过程十分痛苦，好多相关知识上课并没有提及，自己查资料加各种摸索，索性最后实现了各种功能，界面的美观性也比较理想。唯一遗憾的还是重写绘画事件后的画面延迟问题没有解决得很彻底。

